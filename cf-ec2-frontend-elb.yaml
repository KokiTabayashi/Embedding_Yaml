AWSTemplateFormatVersion: 2010-09-09
Parameters:
  InstanceType:
    Description: The EC2 instance type
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
  KeyName:
    Description: Name of an existing EC2 key pair to allow SSH access to the instances
    Type: String
    Default: cf_aws_key
  LatestAmiId:
    Description: The latest Amazon Linux 2 AMI from the Parameter Store
    Type: String
    Default: ami-0bd642e343e80eced
  OperatorEmail:
    Description: The email address to notify when there are any scaling activities
    Type: String
    Default: kokitabayashi@gmail.com
  Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: At least two public subnets in different Availability Zones in the selected VPC
  VPC:
    Type: 'AWS::EC2::VPC::Id'
    Description: A virtual private cloud (VPC) that enables resources in public subnets to connect to the internet
  EC2InstanceProfile:
    Type: String
  ProxyBackEC2PublicDNS:
    Type: String
    Default: Testvalue

Resources:
  ELBFrontendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        SourceSecurityGroupId:
          Fn::GetAtt:
          - ELBFrontendSecurityGroup
          - GroupId
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  EC2FrontendTargetGroup1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: EC2FrontendTargetGroup1
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC

  EC2FrontendTargetGroup2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: EC2FrontendTargetGroup2
      Port: 8080
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC

  ALBListener1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: "HTTP"
            Port: 8080
            Host: "#{host}"
            Path: "/#{path}"
            Query: "#{query}"
            StatusCode: "HTTP_301"
          # TargetGroupArn: !Ref EC2FrontendTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  ALBListener2:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EC2FrontendTargetGroup2
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 8080
      Protocol: HTTP

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets: !Ref Subnets
      SecurityGroups:
        - !GetAtt ELBFrontendSecurityGroup.GroupId

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub ${AWS::StackName}-launch-template
      LaunchTemplateData:
        ImageId: !Ref LatestAmiId
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        SecurityGroupIds: 
          - !Ref EC2SecurityGroup
        IamInstanceProfile: 
          Name: !Ref EC2InstanceProfile
        UserData:
          Fn::Base64: !Sub
            - |
              #!/bin/bash
              su ec2-user -c 'aws s3 cp s3://webapp-embedding-2023-0904/frontend.zip /home/ec2-user/frontend.zip'
              su ec2-user -c 'cd /home/ec2-user; unzip -o frontend.zip'
              su ec2-user -c 'aws s3 cp s3://webapp-embedding-2023-0904/frontend_env /home/ec2-user/frontend/.env'
              su ec2-user -c 'aws s3 cp s3://webapp-embedding-2023-0904/frontend-react-app_env /home/ec2-user/frontend/frontend-react-app/.env'
              echo "REACT_APP_ADDRESS_BACKEND=${ProxyBackEC2PublicDNS}" >> /home/ec2-user/frontend/frontend-react-app/.env
              sed -i 's|REACT_APP_PORT_BACKEND=5001|REACT_APP_PORT_BACKEND=80|g' /home/ec2-user/frontend/frontend-react-app/.env
              su ec2-user -c 'cd /home/ec2-user/frontend/frontend-react-app; npm run build'
              su ec2-user -c 'sleep 5; pm2 start /home/ec2-user/frontend/frontend_node.js'
            - ProxyBackEC2PublicDNS: !Ref ProxyBackEC2PublicDNS

  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref OperatorEmail
          Protocol: email

  WebServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MaxSize: '3'
      MinSize: '1'
      NotificationConfigurations:
        - TopicARN: !Ref NotificationTopic
          NotificationTypes: ['autoscaling:EC2_INSTANCE_LAUNCH', 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR', 'autoscaling:EC2_INSTANCE_TERMINATE', 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR']
      TargetGroupARNs: [!Ref EC2FrontendTargetGroup1, !Ref EC2FrontendTargetGroup2]
      VPCZoneIdentifier: !Ref Subnets

Outputs:
  # FrontEC2Instance:
  #   Description: A reference to the created FrontEC2Instance
  #   Value: !Ref FrontEC2Instance
  FrontAlbDnsName:
    Value: !GetAtt ApplicationLoadBalancer.DNSName